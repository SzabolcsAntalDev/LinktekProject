<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="BackgroundColorLight" Color="#33CCCC" />
    <SolidColorBrush x:Key="BackgroundColorMedium" Color="#05a7b4" />
    <SolidColorBrush x:Key="BackgroundColorDark" Color="#0f849d" />
    <SolidColorBrush x:Key="ForegroundColorEnabled" Color="White" />
    <SolidColorBrush x:Key="ForegroundColorDisabled" Color="DarkGray" />
    <SolidColorBrush x:Key="AlternatingRowBackgroundColor" Color="#00b9bf" />
    <SolidColorBrush x:Key="HoverBackgroundColor" Color="LightBlue" />

    <Style TargetType="Grid" x:Key="ContainerGridStyle">
        <Setter Property="Background" Value="{StaticResource BackgroundColorLight}" />
    </Style>

    <Style TargetType="Button" x:Key="DefaultButtonStyle">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverBackgroundColor}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="{StaticResource BackgroundColorMedium}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColorEnabled}" />
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundColorEnabled}" />
        <Setter Property="Width" Value="70" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="3" />
    </Style>

    <Geometry x:Key="LeftArrowGeomerty">M 0 5 L 10 0 L 10 10 Z</Geometry>
    <Geometry x:Key="RightArrowGeomerty">M 0 0 L 10 5 L 0 10 Z</Geometry>

    <Style TargetType="Path">
        <Setter Property="Fill" Value="{StaticResource ForegroundColorEnabled}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Value="False">
                <Setter Property="Fill" Value="{StaticResource ForegroundColorDisabled}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="LeftDoubleArrowButtonStyle" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <StackPanel Orientation="Horizontal">
                    <Path Data="{StaticResource LeftArrowGeomerty}" />
                    <Path Data="{StaticResource LeftArrowGeomerty}" />
                </StackPanel>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="LeftArrowButtonStyle" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <StackPanel Orientation="Horizontal">
                    <Path Data="{StaticResource LeftArrowGeomerty}" />
                </StackPanel>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="RightArrowButtonStyle" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <StackPanel Orientation="Horizontal">
                    <Path Data="{StaticResource RightArrowGeomerty}" />
                </StackPanel>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="RightDoubleArrowButtonStyle" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <StackPanel Orientation="Horizontal">
                    <Path Data="{StaticResource RightArrowGeomerty}" />
                    <Path Data="{StaticResource RightArrowGeomerty}" />
                </StackPanel>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="TextBlock" x:Key="BaseTextBlockStyle">
        <Setter Property="Foreground" Value="{StaticResource ForegroundColorEnabled}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="3" />
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}" />

    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource BackgroundColorMedium}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColorEnabled}" />
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundColorEnabled}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource BackgroundColorMedium}" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Background" Value="{StaticResource BackgroundColorLight}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource ForegroundColorEnabled}" />
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="Foreground" Value="{StaticResource ForegroundColorEnabled}" />
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundColorEnabled}" />
        <Setter Property="RowBackground" Value="{StaticResource BackgroundColorLight}" />
        <Setter Property="AlternatingRowBackground" Value="{StaticResource AlternatingRowBackgroundColor}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource ForegroundColorEnabled}" />
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource ForegroundColorEnabled}" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HeadersVisibility" Value="Column" />
    </Style>

    <Style TargetType="Grid" x:Key="ColumnHeaderWithMouseOverEffectStyle">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverBackgroundColor}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="{StaticResource BackgroundColorDark}" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="1" />
    </Style>

    <Style TargetType="TextBlock" x:Key="AscendingColumnTextBlockStyle" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsAscending, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="DescendingColumnTextBlockStyle" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsAscending, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Value="False">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="RightAlignedCellStyle">
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <Style TargetType="StackPanel" x:Key="LoadingStackPanelStyle">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style TargetType="TextBlock" x:Key="LoadingTextBlockStyle">
        <Setter Property="Foreground" Value="{StaticResource ForegroundColorEnabled}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style TargetType="ProgressBar" x:Key="LoadingProgressBarStyle">
        <Setter Property="Width" Value="250" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Minimum" Value="0" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="IsIndeterminate" Value="True" />
    </Style>

</ResourceDictionary>